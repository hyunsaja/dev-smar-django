---------------------------------------------------------------------------
[ db 최초 빌드시 migrations 순서]
---------------------------------------------------------------------------
1. settings의 모든 앱을 주석처리하고 migrate 한다.
    project의 urls에서도 엡라우팅을 주석 처리한다
    python manage.py migrate

2. core 앱의 user detail 부분을 models, admin 파일에서 주석처리하고 마이그레이션 실행
    setting의 app 인스톨 부분에 core를 주석푼다
    python manage.py makemigrations
    python manage.py migrate

3. core 앱의 user detail 부분을 주석 풀고 마이그레이션 한다.
    python manage.py makemigrations
    python manage.py migrate

4. machine 앱을 마이그레이션 한다.
    setting의 app 인스톨 부분에 machine 의 주석푼다
    python manage.py makemigrations
    python manage.py migrate

5. 나머지 앱들을 모두 풀고 마이그레이션 한다.
    상동

6. python manage.py createsuperuser

7. python manage.py runserver


--------------------------------------------------------------------------------
[유저 관리]
--------------------------------------------------------------------------------
0. code
    업무부서 : 0 (기술부:1, 업업부:2, 관리부:3)
1. 미주산업
    회사 : miju / miju1234
    유저 : miju_user_1 / miju1234 / 유저id : 2
    유저 : miju_user_2 / miju1234 / 유저id : 3
    꼬리표마킹기 : miju_mark_machine / 머신id : 1
    앵글가공기 : miju_agcut_machine / 머신id : 2
    로봇자동용접기 : miju_robot_weld_machine
2. 이룸산업
    회사 : irum / irum1234
    유저 : irum_user_1 / irum1234 / 유저id : 4
    유저 : irum_user_2 / irum1234 / 유저id : 5
    스텐션프레스 : irum_press_machine / 머신id : 3
    꼬리표마킹기 : irum_mark_machine
3. 정동중공업
    회사 : jungdong / jungdong1234
    유저 : jd_user_1 / jungdong1234
    유저 : jd_user_2 / jungdong1234
    로봇용접기 : jd_robot_weld_machine
    꼬리표마킹기 : jd_mark_machine


----------------------------------------------------------------------------
[ec2 설정]
----------------------------------------------------------------------------

[django_admin ec2 ip] : 13.209.35.179

1. 인스턴스 생성 : 보안그룹 - 인바운드 규칙 추가

2. ssh 접속하여 docker 및 portainer설치(아래 명령을 순서대로 실행)
'''
sudo yum update
sudo amazon-linux-extras install docker -y
sudo service docker start
sudo usermod -a -G docker ec2-user
sudo yum install git -y
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
'''

3. 포테이너 설치(옵션사항)
'''
sudo docker volume create portainer_data
sudo docker run -d -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest
sudo docker swarm init
'''

4. home 디렉토리에 smart-robot-kr 폴더 생성후
cd ..
sudo mkdir smart-robot-kr
sudo chmod 777 smart-robot-kr
cd smart-robot-kr

5. Bitvise를 이용하여 파일 전송(가상환경관련제외)

6. 장고 설치(manage.py 사용을 위해)
sudo python3 -m pip install Django

6. sudo docker-compose up -d --build
    sudo docker-compose exec web python manage.py migrate  # 볼륨 삭제후 도커 실행시
    sudo docker-compose exec web python manage.py createsuperuser  # 볼륨 삭제후 도커 실행시
    sudo docker-compose exec web python manage.py collectstatic

** 도커 컴포즈 명령어(볼륨까지 지울때)
    docker-compose down -v
    docker-compose logs
    sudo find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
    sudo find . -path "*/migrations/*.pyc"  -delete
    docker-compose exec web python manage.py migrate  # 볼륨 삭제후 도커 실행시
    docker-compose exec web python manage.py createsuperuser  # 볼륨 삭제후 도커 실행시

** postgres db 사용시 인스톨 해줘야함 : psycopg2-binary==2.8.6
** static 파일 모으기 : python manage.py collectstatic
** 도커 개발 모드 실행 : docker-compose -f docker-compose.dev.yml up --build

** 장고 시크릿키 만들기
    python manage.py shell
    from django.core.management.utils import get_random_secret_key
    get_random_secret_key()

** 도커 피일 청소 스크립트
    docker stop $(docker ps -a -q)
    docker rm -f $(docker ps -a -q)
    docker rmi -f $(docker images -q)
    docker system prune -a --volumes  # 볼륨까지 삭제




--------------------------------------------------------------
[sm server 접속]
---------------------------------------------------------------

[jango install]
sm@jango:~$ cd /usr/bin/
sm@jango:/usr/bin$ sudo ln -s python3 python
sm@jango:~$ sudo apt install python3.8-venv
sm@jango:~$ sudo apt install python3-pip
sm@jango:~$ python -m venv myVenv

sm@jango:~/myVenv$ source ./bin/activate
(myVenv) sm@jango:~/myVenv$
(myVenv) sm@jango:~/myVenv$ pip install Django
(myVenv) sm@jango:~/myVenv$ pip install djangorestframework
(myVenv) sm@jango:~/myVenv/_MyProject_SMART$ python manage.py runserver  0.0.0.0:32128

[ssh 접속]
host: ssmsoft.iptime.org:32122
ID: sm
PWD: qwer147852.

[jango admin]
path: ~/myVenv/_MyProject_SMART
run python manage.py runserver  0.0.0.0:32128
URL: http://ssmsoft.iptime.org:32128/

[jango id/pwd]
ID: admin
PWD: qwer147852.

ID: miju
PWD: qwer147852.

ID: jeongdong
PWD: qwer147852.

** 이룸 프레스
1. 이더켓 싱크 애러시 확인 방법
# 2. 최초 부팅시 홈 명령 안먹는 현상(auto시 서보파워on--> sys_ready시로 옮김)
# 3. 자동 1번 스탭에서 전체 선택 되어있을때 넘어가는 방법(안내 메세지 보강)
# 4. 7번 스탭에서 123측면 센서를 확인해 주세요 메세지 안뜨게 하기(delay설정함)
# 4. 21번 매크로 입력 애러
5. 29번 스탭에서 웹화면 안뜨는 현상
# 6. Axis2 1번과 위치 동기화 안됨
# 7. 금형안으로 자재가 투입될때 4번실린더 후진할것

** 정동 용접로봇
1. 모션에 shift변수 넣기
2. 이더넷 통신 (5555job) 테스트
3. 멀티테스킹 -> 운영방법 정의
4. 서보 모터 정지시 애러 발생원인 -> 파워 오프시 서보 off 하는걸로 해결 되는건지?
5. 초기 부팅시 프로그램 셀렉트 모두 true 되는 원인
6. 사이클 타임 단축
7. 용접 종료시 지연타임
8. 용접봉, 가스 이상시 비상으로 처리

** 미주산업
1. 진도 보고서 준비
2. 속도 테이블
김 미 은 차장 010-2962-5917

과업완료보고서 10월21까지
교육운영보고서 11월 초까지
10월17일까지 sw 개발 결과서

- 로봇 준비조건 확인
- 로봇 초기속도 느린이유
- 위빙 Timer기능 : 일정시간만 위빙을 중지하는 기능 확인

[야간]
- 클라우드 서버 : cam_master
[주간]
- tcp 서버 : 카메라, 로봇, codesys(테스트용 client로 선 검증)
- Robot : 통합 JOB, 통신 JOB
